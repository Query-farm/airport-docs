---
title: "Frequently Asked Questions"
---

1. Could Airport be implemented without Arrow Flight?

    Yes, but using REST would limit features that require bi-directional data flow. However, since Airport relies on gRPC, it is not currently compatible with WebAssembly or browser environments.

2. Why is `msgpack` used rather than JSON?

    `msgpack` allows binary data to be included in its serialization where JSON does not since JSON is UTF-8 encoded.

3. Does the Airport extention work with Webassembly/WASM?

    It does not at this time because it has a dependency on gRPC and protobuf.

4. What version of DuckDB is supported?

    DuckDB 1.3.0, in the [`main`](https://github.com/Query-farm/duckdb-airport-extension/tree/main) branch of the extension.

5. What dependencies does the Airport extension have?

    The Airport extension relies on the following [`vcpkg`](https://vcpkg.io/en/) packages:

      - [`msgpack`](https://vcpkg.io/en/package/msgpack.html)
      - [`arrow`](https://vcpkg.io/en/package/arrow.html)
      - [`curl`](https://vcpkg.io/en/package/curl.html)

    The specific versions of these dependencies are determined by the active commit of `vcpkg` used in the DuckDB extension build. The commit identifier is specified in the [`extension-ci-tools`](https://github.com/duckdb/extension-ci-tools) repository.

6. Why does the extension take a long time to build?

    The extension's dependendencies are quite complicated and large.